@page "/posts/"
@page "/posts/{Page:int}"

@if (posts == null)
{
    <Loading />
}
else
{
    <div class="main">
        <div class="post-wrap archive">
            @if (posts.Success && posts.Result.Item.Any())
            {
                @foreach (var item in posts.Result.Item)
                {
                    <h3>@item.Year</h3>
                    @foreach (var post in item.Posts)
                    {
                        <article class="archive-item">
                            <a class="archive-item-link" href="@post.Url">@post.Title</a>
                            <span class="archive-item-date">@post.CreationTime</span>
                        </article>
                    }
                }
                <nav class="pagination">
                    @for (int i = 1; i <= TotalPage; i++)
                    {
                        if (i == Page)
                        {
                            <span class="page-number current">@i</span>
                        }
                        else
                        {
                            <a class="page-number" @onclick="@RenderPage" href="/posts/@i">@i</a>
                        }
                    }
                </nav>
            }
            else
            {
                <h2 class="post-title">无数据</h2>
            }
        </div>
    </div>
}

@code {
    /// <summary>
    /// 当前页码
    /// </summary>
    [Parameter]
    public int? Page { get; set; }

    /// <summary>
    /// 限制条数
    /// </summary>
    private int Limit = 15;

    /// <summary>
    /// 总页码
    /// </summary>
    private int TotalPage;

    /// <summary>
    /// posts
    /// </summary>
    private ServiceResult<PagedList<PostsResponse>> posts;

    /// <summary>
    /// 初始化
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(Page.HasValue);
        if (!Page.HasValue)
        {
            Page = 1;
        }

        Console.WriteLine(Page);

        // 获取数据
        posts = await Http.GetFromJsonAsync<ServiceResult<PagedList<PostsResponse>>>($"/blog/posts?page={Page}&limit={Limit}");

        // 计算总页码
        TotalPage = (int)Math.Ceiling((posts.Result.Total / (double)Limit));
    }

    /// <summary>
    /// 点击页码重新渲染数据
    /// </summary>
    /// <returns></returns>
    private async Task RenderPage()
    {
        posts = null;



        await OnInitializedAsync();
    }
}